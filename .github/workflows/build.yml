name: Docker Image CI

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Release Docker images
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      id-token: write
      issues: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/arm64
          - linux/amd64
        python_version:
          - "3.13"
        alpine_version:
          - "3.22"
        include:
          - python_version: "3.12"
            alpine_version: "3.22"
          - python_version: "3.11"
            alpine_version: "3.20"
    steps:
      - name: Check Disk Space
        run: |
          df -h
          docker system df

      - name: Clean up Docker resources
        run: |
          docker system prune -af
          docker builder prune -af

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "VERSION=${BASH_REMATCH[1]}" >> $GITHUB_ENV
            echo "IS_VERSION=true" >> $GITHUB_ENV
          else
            echo "VERSION=latest" >> $GITHUB_ENV
            echo "IS_VERSION=false" >> $GITHUB_ENV
          fi

      - name: Build and push ZigStarGW MT WEB
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IS_VERSION == 'true' && format('ghcr.io/{0}-{1}:{2},ghcr.io/{0}-{1}', github.repository | lower, (matrix.platform == 'linux/arm64' && 'aarch64' || 'amd64'), env.VERSION) || format('ghcr.io/{0}', github.repository | lower) }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_PROGRESS=plain
            BASE_IMAGE=ghcr.io/home-assistant/${{ (matrix.platform == 'linux/arm64' && 'aarch64' || 'amd64') }}-base-python
            PYTHON_VERSION=${{ matrix.python_version }}
            ALPINE_VERSION=${{ matrix.alpine_version }}
